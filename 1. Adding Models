from django.db import models

# Parent model
class Author(models.Model):
    name = models.CharField(max_length=100)
    email = models.EmailField(unique=True)

    def __str__(self):
        return self.name

# One-to-Many Relationship: One Author can have many Books
class Book(models.Model):
    title = models.CharField(max_length=200)
    author = models.ForeignKey(Author, on_delete=models.CASCADE, related_name="books")
    published_date = models.DateField()

    def __str__(self):
        return self.title

# Many-to-Many Relationship: A Book can belong to many Categories, and a Category can have many Books
class Category(models.Model):
    name = models.CharField(max_length=100)
    books = models.ManyToManyField(Book, related_name="categories")

    def __str__(self):
        return self.name

# One-to-One Relationship: Each Book can have one unique Detail (e.g., an ISBN number)
class BookDetail(models.Model):
    book = models.OneToOneField(Book, on_delete=models.CASCADE, related_name="detail")
    isbn = models.CharField(max_length=13, unique=True)
    page_count = models.PositiveIntegerField()

    def __str__(self):
        return f"Detail for {self.book.title}"






#####Defines the relationship and then deletion of associated items when an entry is deleted
author = models.ForeignKey(Author, on_delete=models.CASCADE, related_name="books")